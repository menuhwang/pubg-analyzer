plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
	id 'jacoco'
}

group = 'com.menu'
version = '1.2.0-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'com.google.code.gson:gson:2.10.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacoco {
	toolVersion = '0.8.8'
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(
					dir: it,
					includes: [
							'com/menu/pubganalyzer/*/controller/**',
							'com/menu/pubganalyzer/*/service/**',
							'com/menu/pubganalyzer/*/model/**',
							'com/menu/pubganalyzer/util/*',
							'com/menu/pubganalyzer/util/pubgAPI/DefaultPubgAPI.class',
					],
					excludes: [
							'com/menu/pubganalyzer/telemetries/model/**'
					])
		}))
	}
}


tasks.named('test') {
	if (project.hasProperty("util.pubg.api.token")) {
		systemProperty "util.pubg.api.token", project.property("util.pubg.api.token")
	}
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}
