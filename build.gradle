plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.menu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'com.google.code.gson:gson:2.10.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
}

jacoco {
	toolVersion = '0.8.8'
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(
					dir: it,
					includes: [
							'com/menu/pubganalyzer/domain/dao/impl/*',
							'com/menu/pubganalyzer/util/*',
							'com/menu/pubganalyzer/util/pubgAPI/DefaultPubgAPI.class',
							'com/menu/pubganalyzer/service/**',
							'com/menu/pubganalyzer/controller/**',
					],
					excludes: [
					])
		}))
	}
}


tasks.named('test') {
	if (project.hasProperty("util.pubg.api.token")) {
		systemProperty "util.pubg.api.token", project.property("util.pubg.api.token")
	}
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}
